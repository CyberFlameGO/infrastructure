apiVersion: apps/v1
kind: Deployment
metadata:
  name: avatar
spec:
  minReadySeconds: 10
  revisionHistoryLimit: 2
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      role: avatar
  template:
    metadata:
      labels:
        role: avatar
    spec:
      nodeSelector:
        backend: 'true'
      containers:
        - name: avatar
          image: gcr.io/stratus-181519/web:master
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: http
          readinessProbe:
            initialDelaySeconds: 60
            timeoutSeconds: 30
            periodSeconds: 30
            httpGet:
              path: /069a79f4-44e9-4726-a5be-fca90e38aaf5/8@2x.png
              port: 80
          livenessProbe:
            initialDelaySeconds: 120
            timeoutSeconds: 60
            periodSeconds: 60
            httpGet:
              path: /069a79f4-44e9-4726-a5be-fca90e38aaf5/8@2x.png
              port: 80
          envFrom:
            - secretRef:
                name: web-secret
            - configMapRef:
                name: web-config
          env:
            - name: WEB_ROLE
              value: avatar
          resources:
            requests:
              memory: 400Mi
              cpu: 200m
            limits:
              memory: 400Mi
              cpu: 200m
