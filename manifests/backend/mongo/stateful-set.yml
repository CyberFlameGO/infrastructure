apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: mongo
  selector:
    matchLabels:
      role: mongo
  template:
    metadata:
      labels:
        role: mongo
        type: backend
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: 'true'
    spec:
      nodeSelector:
        backend: 'true'
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  role: mongo
      containers:
        - name: mongo
          image: mongo:4.0.0
          imagePullPolicy: IfNotPresent
          command:
            - mongod
            - --storageEngine=wiredTiger
            - --wiredTigerCacheSizeGB=0.5
            - --wiredTigerIndexPrefixCompression=true
            - --smallfiles
            - --bind_ip_all
            - --quiet
            - --serviceExecutor=adaptive
            - --enableFreeMonitoring=on
            - --setParameter=ttlMonitorEnabled=false
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: volume
              mountPath: /data/db:rw
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - echo 'db.stats().ok' | mongo --quiet || exit 1
          resources:
            requests:
              cpu: 100m
              memory: 500Mi
      volumes:
        # Manual setup for a mounted XFS block storage device
        - name: volume
          hostPath:
            path: /mnt/mongo
